{"version":3,"sources":["components/Business/business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","businessesArray","businesses","undefined","length","id","map","components_Business_business","key","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","sortByOptions","Best Match","Highest Rated","Most Reviewd","handleLocationChange","bind","assertThisInitialized","handleTermChange","handleSortByChange","handleSearch","sortByOption","setState","event","target","value","searchYelpAndSortByRating","searchYelp","preventDefault","_this2","keys","sortbyOption","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","process","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","catch","error","sortedByRating","sort","x","y","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddc428a1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './business.css'\r\n\r\nclass Business extends React.Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating}</h3>\r\n                        <p>{this.props.business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default Business","import React from 'react'\r\nimport './BusinessList.css'\r\nimport Business from '../Business/business'\r\n\r\nclass BusinessList extends React.Component{\r\n    \r\n    render(){\r\n        let businessesArray\r\n        if(this.props.businesses===null\r\n            ||this.props.businesses.length===undefined\r\n            ||this.props.businesses.length===0\r\n            ||this.props.businesses.length===1){\r\n           return businessesArray=<h1 id='noResults'>No results found</h1>\r\n        }else{\r\n             businessesArray=this.props.businesses.map(business=> {                   \r\n                return <Business key={business.id} business={business}/>\r\n            })\r\n        }\r\n        return(\r\n            \r\n            <div className=\"BusinessList\">\r\n                {businessesArray}\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default BusinessList","import React from'react'\r\nimport './SearchBar.css'\r\n\r\n\r\n\r\nclass SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            term:'',\r\n            location:'',\r\n            sortBy:'best_match'\r\n        }\r\n        this.sortByOptions={\r\n            'Best Match':'best_match',\r\n            'Highest Rated':'rating',\r\n            'Most Reviewd':'review_count'\r\n        }\r\n        this.handleLocationChange=this.handleLocationChange.bind(this)\r\n        this.handleTermChange=this.handleTermChange.bind(this)\r\n        this.handleSortByChange=this.handleSortByChange.bind(this)\r\n        this.handleSearch=this.handleSearch.bind(this)\r\n    }\r\n    getSortByClass(sortByOption){\r\n       return this.state.sortBy===sortByOption?'active':''\r\n\r\n    }\r\n    handleSortByChange(sortByOption){\r\n        this.setState({sortBy:sortByOption})\r\n    }\r\n    handleTermChange(event){\r\n        return this.setState({term:event.target.value})       \r\n    }\r\n    handleLocationChange(event){\r\n        return this.setState({location:event.target.value})\r\n    }\r\n    handleSearch(event){\r\n        this.state.sortBy==='rating'?\r\n        this.props.searchYelpAndSortByRating(this.state.term,this.state.location,this.state.sortBy):\r\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy)\r\n        event.preventDefault()\r\n    }\r\n    renderSortByOptions(){\r\n        return Object.keys(this.sortByOptions)\r\n        .map(sortbyOption=>{\r\n            let sortByOptionValue=this.sortByOptions[sortbyOption]\r\n            return <li \r\n            key={sortByOptionValue}\r\n            className={this.getSortByClass(sortByOptionValue)}\r\n            onClick={this.handleSortByChange.bind(this,sortByOptionValue)}\r\n            >{sortbyOption}</li>\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input \r\n                    placeholder=\"Search Businesses\" \r\n                    onChange={this.handleTermChange}/>\r\n                    <input \r\n                    placeholder=\"Where?\" \r\n                    onChange={this.handleLocationChange}/>\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <button onClick={this.handleSearch}>Let's Go</button>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","\r\n\r\nconst apiKey =process.env.REACT_APP_API_KEY\r\n  \r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      { headers: { Authorization: `Bearer ${apiKey}` } }\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => {\r\n            \r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count\r\n            }\r\n          })\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from \"react\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport \"./App.css\";\nimport Yelp from \"../../util/Yelp\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { businesses: null };\n    \n  \n  }\n  searchYelp=(term, location, sortBy)=>{\n    Yelp.search(term, location, sortBy).then(businesses => {\n    return this.setState({ businesses})}\n    ).catch((error)=>{\n      return this.setState({ businesses:[error]})});\n    \n  }\n  searchYelpAndSortByRating=(term, location, sortBy)=>{\n    Yelp.search(term, location, sortBy).then(businesses => {\n      const sortedByRating=businesses.sort((x,y)=>y.rating-x.rating)\n    return this.setState({ businesses:sortedByRating });\n    }).catch((error)=>{\n      return this.setState({ businesses:[error]})});\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar \n            searchYelp={this.searchYelp}\n            searchYelpAndSortByRating={this.searchYelpAndSortByRating}\n            businesses={this.state.businesses} \n            sortedByRating={this.sortedByRating}\n            />\n        {this.state.businesses && (\n          <BusinessList businesses={this.state.businesses} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}