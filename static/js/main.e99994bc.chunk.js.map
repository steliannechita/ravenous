{"version":3,"sources":["components/Business/business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","phone","category","rating","reviewCount","React","Component","BusinessList","businessesArray","Array","isArray","businesses","length","map","components_Business_business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","sortByOptions","Best Match","Highest Rated","Most Reviewd","handleLocationChange","bind","assertThisInitialized","handleTermChange","handleSortByChange","handleSearch","sortByOption","setState","event","target","value","searchYelpAndSortByRating","searchYelp","_this2","keys","sortbyOption","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","apiKey","process","REACT_APP_API_KEY","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","error","App","catch","sortedByRating","sort","x","y","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e99994bc.chunk.js","sourcesContent":["import React from 'react'\nimport './business.css'\n\nclass Business extends React.Component{\n    \n    render(){\n        return(\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} alt=''/>\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                        <p>{this.props.business.address}</p>\n                        <p>{this.props.business.city}</p>\n                        <p>{this.props.business.zipCode}</p>\n                        <p>Tel: {this.props.business.phone}</p>\n                    </div>\n                    <div className=\"Business-reviews\">\n                        <h3>{this.props.business.category}</h3>\n                        <h3 className=\"rating\">{this.props.business.rating}</h3>\n                        <p>{this.props.business.reviewCount}</p>\n                    </div>\n                </div>\n            </div>\n        )    \n    }\n}\n\nexport default Business","import React from 'react'\nimport './BusinessList.css'\nimport Business from '../Business/business'\n\nclass BusinessList extends React.Component{\n    \n    render(){\n        let businessesArray\n        if(Array.isArray(this.props.businesses)&&this.props.businesses.length>0){\n            businessesArray=this.props.businesses.map(business=> {                   \n                return <Business key={business.id} business={business}/>})\n        }else{\n            return businessesArray=<h3 id='noResults'>No results found. Invalid entered inputs or no internet connection</h3>        \n        }\n        \n        return(\n            \n            <div className=\"BusinessList\">\n                {businessesArray}\n            </div>\n        )\n    }    \n}\n\nexport default BusinessList","import React from'react'\nimport './SearchBar.css'\n\n\n\nclass SearchBar extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            term:'',\n            location:'',\n            sortBy:'best_match'\n        }\n        this.sortByOptions={\n            'Best Match':'best_match',\n            'Highest Rated':'rating',\n            'Most Reviewd':'review_count'\n        }\n        this.handleLocationChange=this.handleLocationChange.bind(this)\n        this.handleTermChange=this.handleTermChange.bind(this)\n        this.handleSortByChange=this.handleSortByChange.bind(this)\n        this.handleSearch=this.handleSearch.bind(this)\n    }\n    getSortByClass(sortByOption){\n       return this.state.sortBy===sortByOption?'active':''\n\n    }\n    handleSortByChange(sortByOption){\n        this.setState({sortBy:sortByOption})\n    }\n    handleTermChange(event){\n        return this.setState({term:event.target.value})       \n    }\n    handleLocationChange(event){\n        return this.setState({location:event.target.value})\n    }\n    handleSearch(){\n        return this.state.sortBy==='rating'?\n        this.props.searchYelpAndSortByRating(this.state.term,this.state.location,this.state.sortBy):\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy)\n        \n    }\n    renderSortByOptions(){\n        return Object.keys(this.sortByOptions)\n        .map(sortbyOption=>{\n            let sortByOptionValue=this.sortByOptions[sortbyOption]\n            return <li \n            key={sortByOptionValue}\n            className={this.getSortByClass(sortByOptionValue)}\n            onClick={this.handleSortByChange.bind(this,sortByOptionValue)}\n            >{sortbyOption}</li>\n        })\n    }\n    render(){\n        return(\n            <div className=\"SearchBar\">\n                <div className=\"SearchBar-sort-options\">\n                    <ul>\n                        {this.renderSortByOptions()}\n                    </ul>\n                </div>\n                <div className=\"SearchBar-fields\">\n                    <input \n                    placeholder=\"Search Businesses\" \n                    onChange={this.handleTermChange}/>\n                    <input \n                    placeholder=\"Where?\" \n                    onChange={this.handleLocationChange}/>\n                </div>\n                <div className=\"SearchBar-submit\">\n                    <button onClick={this.handleSearch}>Let's Go</button>\n                </div>\n            </div>  \n        )\n    }\n}\n\nexport default SearchBar","const apiKey = process.env.REACT_APP_API_KEY;\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n      { headers: { Authorization: `Bearer ${apiKey}` } }\n    )\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map(business => {\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zip_code,\n              category: business.categories[0].title,\n              rating: business.rating,\n              reviewCount: business.review_count,\n              phone:business.phone\n            };\n          });\n        } else if (jsonResponse.error) {\n          throw jsonResponse;\n        }\n      });\n  }\n};\n\nexport default Yelp;\n","import React from \"react\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport \"./App.css\";\nimport Yelp from \"../../util/Yelp\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { businesses: null };\n    \n  \n  }\n  searchYelp=(term, location, sortBy)=>{\n    Yelp.search(term, location, sortBy)\n    .then(businesses => {\n      return this.setState({businesses: businesses})})\n      .catch((error)=> this.setState({businesses:error}))\n  }\n  searchYelpAndSortByRating=(term, location, sortBy)=>{\n    Yelp.search(term, location, sortBy)\n    .then(businesses => {\n      const sortedByRating=businesses.sort((x,y)=>y.rating-x.rating)\n      return this.setState({ businesses:sortedByRating })})\n      .catch((error)=> this.setState({businesses:error}))\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar \n            searchYelp={this.searchYelp}\n            searchYelpAndSortByRating={this.searchYelpAndSortByRating}\n            />\n        {this.state.businesses && (\n          <BusinessList businesses={this.state.businesses} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}