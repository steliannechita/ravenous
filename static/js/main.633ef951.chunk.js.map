{"version":3,"sources":["components/Business/business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","phone","category","rating","reviewCount","React","Component","BusinessList","isLoading","errors","id","description","businessesArray","businesses","map","console","log","components_Business_business","key","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClearSearch","handleClearErrState","setState","term","location","searchInputRef","current","focus","createRef","state","sortBy","sortByOptions","Best Match","Highest Rated","Most Reviewd","handleLocationChange","bind","assertThisInitialized","handleTermChange","handleSortByChange","handleSearch","sortByOption","event","target","value","e","preventDefault","searchYelpAndSortByRating","searchYelp","_this2","keys","sortbyOption","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","onSubmit","ref","placeholder","onChange","required","Yelp","search","fetch","concat","headers","Authorization","process","then","response","json","jsonResponse","length","image_url","address1","zip_code","categories","title","review_count","error","App","catch","sortedByRating","sort","x","y","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.633ef951.chunk.js","sourcesContent":["import React from 'react'\r\nimport './business.css'\r\n\r\nclass Business extends React.Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.zipCode}</p>\r\n                        <p>Tel: {this.props.business.phone}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating}</h3>\r\n                        <p>{this.props.business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default Business","import React from \"react\";\r\nimport \"./BusinessList.css\";\r\nimport Business from \"../Business/business\";\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-text\">Loading results</div>\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.errors) {\r\n      return (\r\n        <h3 id=\"noResults\">\r\n          {this.props.errors.description ||\r\n            \"Couldn't perform the search. Please check your internet connection then reload the page\"}\r\n        </h3>\r\n      );\r\n    }\r\n\r\n    let businessesArray = this.props.businesses.map(business => {\r\n      console.log(business);\r\n      return <Business key={business.id} business={business} />;\r\n    });\r\n    return <div className=\"BusinessList\">{businessesArray}</div>;\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchInputRef = React.createRef();\r\n    this.state = {\r\n      term: \"\",\r\n      location: \"\",\r\n      sortBy: \"best_match\"\r\n    };\r\n    this.sortByOptions = {\r\n      \"Best Match\": \"best_match\",\r\n      \"Highest Rated\": \"rating\",\r\n      \"Most Reviewd\": \"review_count\"\r\n    };\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleSortByChange = this.handleSortByChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n  getSortByClass(sortByOption) {\r\n    return this.state.sortBy === sortByOption ? \"active\" : \"\";\r\n  }\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({ sortBy: sortByOption });\r\n  }\r\n  handleTermChange(event) {\r\n    this.props.handleClearErrState();\r\n    return this.setState({ term: event.target.value });\r\n  }\r\n  handleLocationChange(event) {\r\n    this.props.handleClearErrState();\r\n    return this.setState({ location: event.target.value });\r\n  }\r\n  handleSearch(e) {\r\n    e.preventDefault();\r\n    return this.state.sortBy === \"rating\"\r\n      ? this.props.searchYelpAndSortByRating(\r\n          this.state.term,\r\n          this.state.location,\r\n          this.state.sortBy\r\n        )\r\n      : this.props.searchYelp(\r\n          this.state.term,\r\n          this.state.location,\r\n          this.state.sortBy\r\n        );\r\n  }\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map(sortbyOption => {\r\n      let sortByOptionValue = this.sortByOptions[sortbyOption];\r\n      return (\r\n        <li\r\n          key={sortByOptionValue}\r\n          className={this.getSortByClass(sortByOptionValue)}\r\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\r\n        >\r\n          {sortbyOption}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  handleClearSearch = () => {\r\n    this.props.handleClearErrState();\r\n    this.setState({ term: \"\", location: \"\" });\r\n    this.searchInputRef.current.focus();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>{this.renderSortByOptions()}</ul>\r\n        </div>\r\n        <form onSubmit={this.handleSearch}>\r\n          <div className=\"SearchBar-fields\">\r\n            <input\r\n              ref={this.searchInputRef}\r\n              placeholder=\"Search Businesses\"\r\n              value={this.state.term}\r\n              onChange={this.handleTermChange}\r\n              required\r\n            />\r\n            <input\r\n              placeholder=\"Where?\"\r\n              value={this.state.location}\r\n              onChange={this.handleLocationChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"SearchBar-submit\">\r\n            <button>Let's Go</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"ClearSearch\">\r\n          <button onClick={this.handleClearSearch}>Clear</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      { headers: { Authorization: `Bearer ${apiKey}` } }\r\n    )\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n          if (jsonResponse.businesses.length !== 0) {\r\n            return jsonResponse.businesses.map(business => {\r\n              return {\r\n                id: business.id,\r\n                imageSrc: business.image_url,\r\n                name: business.name,\r\n                address: business.location.address1,\r\n                city: business.location.city,\r\n                state: business.location.state,\r\n                zipCode: business.location.zip_code,\r\n                category: business.categories[0].title,\r\n                rating: business.rating,\r\n                reviewCount: business.review_count,\r\n                phone: business.phone\r\n              };\r\n            });\r\n          } else {\r\n            throw {\r\n              description:\r\n                \"Didn't find any results for the specified term. Try to perform the search by using valid names/terms\"\r\n            };\r\n          }\r\n        } else if (jsonResponse.error) {\r\n          throw jsonResponse.error;\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from \"react\";\r\nimport BusinessList from \"../BusinessList/BusinessList\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport \"./App.css\";\r\nimport Yelp from \"../../util/Yelp\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      businesses: [],\r\n      errors: null,\r\n      isLoading: false\r\n    };\r\n  }\r\n  searchYelp = (term, location, sortBy) => {\r\n    this.setState({ businesses: [], errors: null, isLoading: true });\r\n    Yelp.search(term, location, sortBy)\r\n      .then(businesses => {\r\n        return this.setState({ businesses: businesses, isLoading: false });\r\n      })\r\n      .catch(errors => this.setState({ errors, isLoading: false }));\r\n  };\r\n  searchYelpAndSortByRating = (term, location, sortBy) => {\r\n    this.setState({ businesses: [], errors: null, isLoading: true });\r\n    Yelp.search(term, location, sortBy)\r\n      .then(businesses => {\r\n        const sortedByRating = businesses.sort((x, y) => y.rating - x.rating);\r\n        return this.setState({ businesses: sortedByRating, isLoading: false });\r\n      })\r\n      .catch(errors => this.setState({ errors, isLoading: false }));\r\n  };\r\n  handleClearErrState = () => {\r\n    this.setState({ errors: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar\r\n          searchYelp={this.searchYelp}\r\n          searchYelpAndSortByRating={this.searchYelpAndSortByRating}\r\n          handleClearErrState={this.handleClearErrState}\r\n        />\r\n\r\n        <BusinessList\r\n          businesses={this.state.businesses}\r\n          errors={this.state.errors}\r\n          isLoading={this.state.isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}